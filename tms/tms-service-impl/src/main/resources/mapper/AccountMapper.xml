<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.tms.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.tms.entity.Account">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_name" jdbcType="VARCHAR" property="accountName" />
    <result column="account_mobile" jdbcType="VARCHAR" property="accountMobile" />
    <result column="account_password" jdbcType="VARCHAR" property="accountPassword" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="account_status" jdbcType="VARCHAR" property="accountStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account_name, account_mobile, account_password, create_time, update_time, account_status
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.tms.entity.AccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.tms.entity.AccountExample">
    delete from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.tms.entity.Account">

    insert into account (account_name, account_mobile, account_password, 
      create_time, update_time, account_status
      )
    values (#{accountName,jdbcType=VARCHAR}, #{accountMobile,jdbcType=VARCHAR}, #{accountPassword,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{accountStatus,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.tms.entity.Account" useGeneratedKeys="true" keyProperty="id">
        insert into account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountName != null">
        account_name,
      </if>
      <if test="accountMobile != null">
        account_mobile,
      </if>
      <if test="accountPassword != null">
        account_password,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="accountStatus != null">
        account_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountName != null">
        #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountMobile != null">
        #{accountMobile,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null">
        #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountStatus != null">
        #{accountStatus,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.tms.entity.AccountExample" resultType="java.lang.Long">
    select count(*) from account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
    <select id="findAllAccountWithRoles" resultMap="accountWithRolesMap">
        SELECT
            account.*, roles.id AS rolesId,
            roles.roles_code,
            roles.roles_name,
            roles.create_time AS rolesCreateTime,
            roles.update_time AS rolesUpdateTime
        FROM
            account
        LEFT JOIN account_roles ON account.id = account_roles.account_id
        LEFT JOIN roles ON roles.id = account_roles.roles_id
        order by account.id desc

    </select>
    
    <resultMap id="accountWithRolesMap" type="Account" extends="BaseResultMap">
        <collection property="rolesList" ofType="Roles">
            <id property="id" column="rolesId"/>
            <result property="updateTime" column="rolesUpdateTime"/>
            <result property="createTime" column="rolesCreateTime"/>
            <result property="rolesCode" column="roles_code"/>
            <result property="rolesName" column="roles_name"/>
        </collection>
    </resultMap>


    <update id="updateByExampleSelective" parameterType="map">
    update account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.accountName != null">
        account_name = #{record.accountName,jdbcType=VARCHAR},
      </if>
      <if test="record.accountMobile != null">
        account_mobile = #{record.accountMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.accountPassword != null">
        account_password = #{record.accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accountStatus != null">
        account_status = #{record.accountStatus,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update account
    set id = #{record.id,jdbcType=INTEGER},
      account_name = #{record.accountName,jdbcType=VARCHAR},
      account_mobile = #{record.accountMobile,jdbcType=VARCHAR},
      account_password = #{record.accountPassword,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      account_status = #{record.accountStatus,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.tms.entity.Account">
    update account
    <set>
      <if test="accountName != null">
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="accountMobile != null">
        account_mobile = #{accountMobile,jdbcType=VARCHAR},
      </if>
      <if test="accountPassword != null">
        account_password = #{accountPassword,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountStatus != null">
        account_status = #{accountStatus,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.tms.entity.Account">
    update account
    set account_name = #{accountName,jdbcType=VARCHAR},
      account_mobile = #{accountMobile,jdbcType=VARCHAR},
      account_password = #{accountPassword,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      account_status = #{accountStatus,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>