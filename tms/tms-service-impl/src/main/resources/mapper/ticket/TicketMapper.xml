<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.tms.mapper.ticket.TicketMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.tms.entity.ticket.Ticket">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="ticket_num" jdbcType="VARCHAR" property="ticketNum" />
    <result column="ticket_in_time" jdbcType="TIMESTAMP" property="ticketInTime" />
    <result column="ticket_out_time" jdbcType="TIMESTAMP" property="ticketOutTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="office_id" jdbcType="INTEGER" property="officeId" />
    <result column="open_card_time" jdbcType="TIMESTAMP" property="openCardTime" />
    <result column="invalidate_time" jdbcType="TIMESTAMP" property="invalidateTime" />
    <result column="customer_id" jdbcType="INTEGER" property="customerId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ticket_num, ticket_in_time, ticket_out_time, status, create_time, update_time, 
    office_id, open_card_time, invalidate_time, customer_id
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.tms.entity.ticket.TicketExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ticket
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ticket
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.tms.entity.ticket.TicketExample">
    delete from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
    <delete id="batchDeleteByIdList">

        delete from ticket where id in
        <foreach collection="list" item="ticketId" open="(" close=")" separator=",">
            #{ticketId}
        </foreach>

    </delete>
    <insert id="insert" parameterType="com.kaishengit.tms.entity.ticket.Ticket">
    insert into ticket (ticket_num, ticket_in_time, ticket_out_time,
      status, create_time, update_time, 
      office_id, open_card_time, invalidate_time, 
      customer_id)
    values (#{ticketNum,jdbcType=VARCHAR}, #{ticketInTime,jdbcType=TIMESTAMP}, #{ticketOutTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{officeId,jdbcType=INTEGER}, #{openCardTime,jdbcType=TIMESTAMP}, #{invalidateTime,jdbcType=TIMESTAMP}, 
      #{customerId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.tms.entity.ticket.Ticket">
    insert into ticket
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ticketNum != null">
        ticket_num,
      </if>
      <if test="ticketInTime != null">
        ticket_in_time,
      </if>
      <if test="ticketOutTime != null">
        ticket_out_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="officeId != null">
        office_id,
      </if>
      <if test="openCardTime != null">
        open_card_time,
      </if>
      <if test="invalidateTime != null">
        invalidate_time,
      </if>
      <if test="customerId != null">
        customer_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ticketNum != null">
        #{ticketNum,jdbcType=VARCHAR},
      </if>
      <if test="ticketInTime != null">
        #{ticketInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketOutTime != null">
        #{ticketOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="officeId != null">
        #{officeId,jdbcType=INTEGER},
      </if>
      <if test="openCardTime != null">
        #{openCardTime,jdbcType=TIMESTAMP},
      </if>
      <if test="invalidateTime != null">
        #{invalidateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerId != null">
        #{customerId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>

    <insert id="batchInsert" parameterType="list">
        insert into ticket (ticket_num,ticket_in_time,status,create_time) values
        <foreach collection="list" item="ticket" separator=",">
            (#{ticket.ticketNum},#{ticket.ticketInTime},#{ticket.status},#{ticket.createTime})
        </foreach>

    </insert>



    <select id="countByExample" parameterType="com.kaishengit.tms.entity.ticket.TicketExample" resultType="java.lang.Long">
    select count(*) from ticket
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>


    <select id="findMaxNumInTicket" resultType="java.lang.Integer">
         select max(convert(ticket_num,unsigned int)) m from ticket

    </select>

    <select id="selectTicketsByStartAndEndNum" resultType="com.kaishengit.tms.entity.ticket.Ticket">
        select * from ticket where ticket_num >= convert(#{start},unsigned int)
                                and ticket_num &lt;= convert(#{end},unsigned int)
                                and status = #{status}
    </select>

    <select id="countByStatus" resultType="java.util.Map">
        select count(*) as total_num,
        count(case when status = '已入库' then 1 end) as in_num,
        count(case when status = '已入库' then 1 end) as out_num,
        count(case when status = '已销售' then 1 end) as saled_num,
        count(case when status = '已挂失' then 1 end) as lost_num,
        count(case when status = '已过期' then 1 end ) as past_num
        from ticket
    </select>

    <select id="findSaleCountByOfficeId" resultType="java.util.Map">
        select count(*) total_num,
            count(case when `status` = '已销售' then 1 end ) saled_num,
            count(case when `status` = '已下发' then 1 end) out_num,
            count(case when `status` = '已挂失' then 1 end) lost_num,
            count(case when `status` = '已过期' then 1 end) past_num
        from ticket where office_id = #{id}

    </select>


    <update id="updateByExampleSelective" parameterType="map">
    update ticket
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.ticketNum != null">
        ticket_num = #{record.ticketNum,jdbcType=VARCHAR},
      </if>
      <if test="record.ticketInTime != null">
        ticket_in_time = #{record.ticketInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ticketOutTime != null">
        ticket_out_time = #{record.ticketOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.officeId != null">
        office_id = #{record.officeId,jdbcType=INTEGER},
      </if>
      <if test="record.openCardTime != null">
        open_card_time = #{record.openCardTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.invalidateTime != null">
        invalidate_time = #{record.invalidateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.customerId != null">
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ticket
    set id = #{record.id,jdbcType=BIGINT},
      ticket_num = #{record.ticketNum,jdbcType=VARCHAR},
      ticket_in_time = #{record.ticketInTime,jdbcType=TIMESTAMP},
      ticket_out_time = #{record.ticketOutTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      office_id = #{record.officeId,jdbcType=INTEGER},
      open_card_time = #{record.openCardTime,jdbcType=TIMESTAMP},
      invalidate_time = #{record.invalidateTime,jdbcType=TIMESTAMP},
      customer_id = #{record.customerId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.tms.entity.ticket.Ticket">
    update ticket
    <set>
      <if test="ticketNum != null">
        ticket_num = #{ticketNum,jdbcType=VARCHAR},
      </if>
      <if test="ticketInTime != null">
        ticket_in_time = #{ticketInTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ticketOutTime != null">
        ticket_out_time = #{ticketOutTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="officeId != null">
        office_id = #{officeId,jdbcType=INTEGER},
      </if>
      <if test="openCardTime != null">
        open_card_time = #{openCardTime,jdbcType=TIMESTAMP},
      </if>
      <if test="invalidateTime != null">
        invalidate_time = #{invalidateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="customerId != null">
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.tms.entity.ticket.Ticket">
    update ticket
    set ticket_num = #{ticketNum,jdbcType=VARCHAR},
      ticket_in_time = #{ticketInTime,jdbcType=TIMESTAMP},
      ticket_out_time = #{ticketOutTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      office_id = #{officeId,jdbcType=INTEGER},
      open_card_time = #{openCardTime,jdbcType=TIMESTAMP},
      invalidate_time = #{invalidateTime,jdbcType=TIMESTAMP},
      customer_id = #{customerId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>